swagger: '2.0'
info:
  description: The HL7 Health Services Platform Marketplace (HSPM or Marketplace) specification is a REST API for publication, cataloging, discovering, and deployment of services and executable knowledge into any compliant IT environment in an automated manner. It is similar to an app marketplace for health services in that it manages deployment to a users local infrastructural environment and data context. It is not a flat directory of SMART-on-FHIR and other UI-only applications, but MAY be used for this purpose. A Marketplace can be implemented by vendors, providers, standards developing organizations (SDOs), consortiums, and all manner of parties interested in interoperable services.
  version: 1.0.0
  title: Health Services Platform Marketplace
  termsOfService: http://hspc/terms/
  contact:
    email: hspmTeam@hspc.org
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: hspc.org
basePath: /hspm
tags:
- name: licenses
  description: Licenses are globally declared terms of use, and MAY or MAY NOT be useful in all contexts. As discussed in , this is expected to be customized to the local sales and business model. Implementors and operators only focused on F/OSS Services may be satisfied by the barebones model.
- name: services
  description: A Service is a structured declaration of capabilities for a package of executable or consumable content, with release managed in a discrete lifecycle. A CDS Hooks or FHIR Terminology service “ExampleService” developed by vendor “ExampleSoft”, for example, would be declared to a Marketplace instance prior to actual release of the software to establish descriptive text, create screenshots, set standards-related declarations, and other fields.
- name: interfaces
  description: interfaces
- name: users
  description: Operations about user
- name: identity_providers
  description: Operations about identity_providers
- name: roles
  description: Operations about roles
- name: sessions
  description: Operations about sessions
schemes:
- https
- http
paths:
  /licenses:
    post:
      tags:
      - licenses
      summary: Add a new license to the marketplace
      parameters:
      - in: query
        name: format
        type: string
        enum:
          - xml
          - json
        description: format
      - in: body
        name: body
        description: License object that needs to be added to the Marketplace
        required: true
        schema:
          $ref: '#/definitions/License'
      description: ''
      operationId: addLicense
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      responses:
        '405':
          description: Invalid input
      security:
      - licensestore_auth:
        - write:licenses
        - read:licenses
  /licenses/{id}:
    get:
      tags:
      - licenses
      summary: Returns license by Id
      parameters:
      - in: path
        name: id
        type: string
        required: true
        description: Id of the license to retrieve
      - in: query
        name: format
        type: string
        enum:
          - xml
          - json
        description: format
      description: ''
      operationId: getLicense
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      responses:
        '405':
          description: Invalid input
      security:
      - licensestore_auth:
        - write:licenses
        - read:licenses
    put:
      tags:
      - licenses
      summary: Updates license by Id
      parameters:
      - in: path
        name: id
        type: string
        required: true
        description: Id of the license to update
      - in: query
        name: format
        type: string
        enum:
          - xml
          - json
        description: format
      description: ''
      operationId: updateLicense
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      responses:
        '405':
          description: Invalid input
      security:
      - licensestore_auth:
        - write:licenses
        - read:licenses
    delete:
      tags:
      - licenses
      summary: Deletes a license by Id
      parameters:
      - in: path
        name: id
        type: string
        required: true
        description: Id of the license to delete
      - in: query
        name: format
        type: string
        required: false
        description: format
      description: ''
      operationId: deleteLicense
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      responses:
        '405':
          description: Invalid input
      security:
      - licensestore_auth:
        - write:licenses
        - read:licenses
  /services:
    post:
      tags:
      - services
      summary: Add a new service to the marketplace
      parameters:
      - in: query
        name: format
        type: string
        enum:
          - xml
          - json
        description: format
      - in: body
        name: body
        description: License object that needs to be added to the Marketplace
        required: true
        schema:
          $ref: '#/definitions/License'
      description: ''
      operationId: addService
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      responses:
        '405':
          description: Invalid input
      security:
      - licensestore_auth:
        - write:licenses
        - read:licenses
  /services/{id}:
    get:
      tags:
      - services
      summary: Returns services by Id
      parameters:
      - in: path
        name: id
        type: string
        required: true
        description: Id of the services to retrieve
      - in: query
        name: format
        type: string
        enum:
          - xml
          - json
        description: format
      description: ''
      operationId: getService
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      responses:
        '405':
          description: Invalid input
      security:
      - licensestore_auth:
        - write:licenses
        - read:licenses
    put:
      tags:
      - services
      summary: Updates services by Id
      parameters:
      - in: path
        name: id
        type: string
        required: true
        description: Id of the services to update
      - in: query
        name: format
        type: string
        enum:
          - xml
          - json
        description: format
      description: ''
      operationId: updateService
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      responses:
        '405':
          description: Invalid input
      security:
      - licensestore_auth:
        - write:licenses
        - read:licenses
    delete:
      tags:
      - services
      summary: Deletes a services by Id
      parameters:
      - in: path
        name: id
        type: string
        required: true
        description: Id of the services to delete
      - in: query
        name: format
        type: string
        required: false
        description: format
      description: ''
      operationId: deleteService
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      responses:
        '405':
          description: Invalid input
      security:
      - licensestore_auth:
        - write:licenses
        - read:licenses
  /services/{id}/publish:
    post:
      tags:
      - services
      summary: Returns services by Id
      parameters:
      - in: path
        name: id
        type: string
        required: true
        description: Id of the services to retrieve
      - in: query
        name: format
        type: string
        enum:
          - xml
          - json
        description: format
      description: ''
      operationId: publishService
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      responses:
        '405':
          description: Invalid input
      security:
      - licensestore_auth:
        - write:licenses
        - read:licenses
  /services/{id}/unpublish:
    post:
      tags:
      - services
      summary: Returns services by Id
      parameters:
      - in: path
        name: id
        type: string
        required: true
        description: Id of the services to retrieve
      - in: query
        name: format
        type: string
        enum:
          - xml
          - json
        description: format
      description: ''
      operationId: unpublishService
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      responses:
        '405':
          description: Invalid input
      security:
      - licensestore_auth:
        - write:licenses
        - read:licenses
  /services/{serviceId}/builds:
    post:
      tags:
      - services
      summary: Add a new build to the marketplace
      parameters:
      - in: path
        name: serviceId
        type: string
        required: true
        description: Id of the services to retrieve
      - in: query
        name: format
        type: string
        enum:
          - xml
          - json
        description: format
      - in: body
        name: body
        description: License object that needs to be added to the Marketplace
        required: true
        schema:
          $ref: '#/definitions/License'
      description: ''
      operationId: addBuild
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      responses:
        '405':
          description: Invalid input
      security:
      - licensestore_auth:
        - write:licenses
        - read:licenses
  /services/{serviceId}/builds/{buildId}:
    get:
      tags:
      - services
      summary: Returns services by Id
      parameters:
      - in: path
        name: serviceId
        type: string
        required: true
        description: Id of the services to retrieve
      - in: path
        name: buildId
        type: string
        required: true
        description: Id of the services to retrieve
      - in: query
        name: format
        type: string
        enum:
          - xml
          - json
        description: format
      description: ''
      operationId: getBuild
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      responses:
        '405':
          description: Invalid input
      security:
      - licensestore_auth:
        - write:licenses
        - read:licenses
    put:
      tags:
      - services
      summary: Updates services by Id
      parameters:
      - in: path
        name: serviceId
        type: string
        required: true
        description: Id of the services to retrieve
      - in: path
        name: buildId
        type: string
        required: true
        description: Id of the services to retrieve
      description: ''
      operationId: updateBuild
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      responses:
        '405':
          description: Invalid input
      security:
      - licensestore_auth:
        - write:licenses
        - read:licenses
    delete:
      tags:
      - services
      summary: Deletes a services by Id
      parameters:
      - in: path
        name: serviceId
        type: string
        required: true
        description: Id of the services to retrieve
      - in: path
        name: buildId
        type: string
        required: true
        description: Id of the services to retrieve
      description: ''
      operationId: deleteBuild
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      responses:
        '405':
          description: Invalid input
      security:
      - licensestore_auth:
        - write:licenses
        - read:licenses
  /interfaces:
    post:
      tags:
      - interfaces
      summary: Add a new license to the marketplace
      parameters:
      - in: query
        name: format
        type: string
        enum:
          - xml
          - json
        description: format
      - in: body
        name: body
        description: License object that needs to be added to the Marketplace
        required: true
        schema:
          $ref: '#/definitions/License'
      description: ''
      operationId: addInterface
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      responses:
        '405':
          description: Invalid input
      security:
      - interfacestore_auth:
        - write:interfaces
        - read:interfaces
  /interfaces/{id}:
    get:
      tags:
      - interfaces
      summary: Returns license by Id
      parameters:
      - in: path
        name: id
        type: string
        required: true
        description: Id of the license to retrieve
      - in: query
        name: format
        type: string
        enum:
          - xml
          - json
        description: format
      description: ''
      operationId: getInterface
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      responses:
        '405':
          description: Invalid input
      security:
      - licensestore_auth:
        - write:licenses
        - read:licenses
    put:
      tags:
      - interfaces
      summary: Updates license by Id
      parameters:
      - in: path
        name: id
        type: string
        required: true
        description: Id of the license to update
      - in: query
        name: format
        type: string
        enum:
          - xml
          - json
        description: format
      description: ''
      operationId: updateInterface
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      responses:
        '405':
          description: Invalid input
      security:
      - licensestore_auth:
        - write:licenses
        - read:licenses
    delete:
      tags:
      - interfaces
      summary: Deletes a license by Id
      parameters:
      - in: path
        name: id
        type: string
        required: true
        description: Id of the license to delete
      - in: query
        name: format
        type: string
        required: false
        description: format
      description: ''
      operationId: deleteInterface
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      responses:
        '405':
          description: Invalid input
      security:
      - licensestore_auth:
        - write:licenses
        - read:licenses
  /users:
    post:
      tags:
      - users
      summary: Add a new license to the marketplace
      parameters:
      - in: query
        name: format
        type: string
        enum:
          - xml
          - json
        description: format
      - in: body
        name: body
        description: License object that needs to be added to the Marketplace
        required: true
        schema:
          $ref: '#/definitions/License'
      description: ''
      operationId: addUser
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: A list of users
 
        '405':
          description: Invalid input
      security:
      - licensestore_auth:
        - write:licenses
        - read:licenses
  /users/{id}:
    get:
      tags:
      - users
      summary: Returns license by Id
      parameters:
      - in: path
        name: id
        type: string
        required: true
        description: Id of the license to retrieve
      - in: query
        name: format
        type: string
        enum:
          - xml
          - json
        description: format
      description: ''
      operationId: getUser
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: User
          schema:
              type: array
              items:
                $ref: "#/definitions/User"
        '405':
          description: Invalid input
      security:
      - licensestore_auth:
        - write:licenses
        - read:licenses
    put:
      tags:
      - users
      summary: Updates license by Id
      parameters:
      - in: path
        name: id
        type: string
        required: true
        description: Id of the license to update
      - in: query
        name: format
        type: string
        enum:
          - xml
          - json
        description: format
      description: ''
      operationId: updateUser
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      responses:
        '405':
          description: Invalid input
      security:
      - licensestore_auth:
        - write:licenses
        - read:licenses
    delete:
      tags:
      - users
      summary: Deletes a license by Id
      parameters:
      - in: path
        name: id
        type: string
        required: true
        description: Id of the license to delete
      - in: query
        name: format
        type: string
        required: false
        description: format
      description: ''
      operationId: deleteUser
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      responses:
        '405':
          description: Invalid input
      security:
      - licensestore_auth:
        - write:licenses
        - read:licenses
  /users/{userId}/identities:
    get:
      tags:
      - users
      summary: get user identities
      parameters:
      - in: path
        name: userId
        type: string
        required: true
        description: returns a list of user identities
      description: ''
      operationId: getUserIdentities
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      responses:
        '405':
          description: Invalid input
      security:
      - licensestore_auth:
        - write:licenses
        - read:licenses
  /groups:
    post:
      tags:
      - groups
      summary: Add a new license to the marketplace
      parameters:
      - in: query
        name: format
        type: string
        enum:
          - xml
          - json
        description: format
      - in: body
        name: body
        description: License object that needs to be added to the Marketplace
        required: true
        schema:
          $ref: '#/definitions/License'
      description: ''
      operationId: addGroup
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      responses:
        '405':
          description: Invalid input
      security:
      - licensestore_auth:
        - write:licenses
        - read:licenses
  /groups/{id}:
    get:
      tags:
      - groups
      summary: Returns license by Id
      parameters:
      - in: path
        name: id
        type: string
        required: true
        description: Id of the license to retrieve
      - in: query
        name: format
        type: string
        enum:
          - xml
          - json
        description: format
      description: ''
      operationId: getGroup
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      responses:
        '405':
          description: Invalid input
      security:
      - licensestore_auth:
        - write:licenses
        - read:licenses
    put:
      tags:
      - groups
      summary: Updates license by Id
      parameters:
      - in: path
        name: id
        type: string
        required: true
        description: Id of the license to update
      - in: query
        name: format
        type: string
        enum:
          - xml
          - json
        description: format
      description: ''
      operationId: updateGroup
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      responses:
        '405':
          description: Invalid input
      security:
      - licensestore_auth:
        - write:licenses
        - read:licenses
    delete:
      tags:
      - groups
      summary: Deletes a license by Id
      parameters:
      - in: path
        name: id
        type: string
        required: true
        description: Id of the license to delete
      - in: query
        name: format
        type: string
        required: false
        description: format
      description: ''
      operationId: deleteGroup
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      responses:
        '405':
          description: Invalid input
      security:
      - licensestore_auth:
        - write:licenses
        - read:licenses
  /roles:
    post:
      tags:
      - roles
      summary: Add a new license to the marketplace
      parameters:
      - in: query
        name: format
        type: string
        enum:
          - xml
          - json
        description: format
      - in: body
        name: body
        description: License object that needs to be added to the Marketplace
        required: true
        schema:
          $ref: '#/definitions/License'
      description: ''
      operationId: addRole
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      responses:
        '405':
          description: Invalid input
      security:
      - licensestore_auth:
        - write:licenses
        - read:licenses
  /roles/{id}:
    get:
      tags:
      - roles
      summary: Returns license by Id
      parameters:
      - in: path
        name: id
        type: string
        required: true
        description: Id of the license to retrieve
      - in: query
        name: format
        type: string
        enum:
          - xml
          - json
        description: format
      description: ''
      operationId: getRole
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      responses:
        '405':
          description: Invalid input
      security:
      - licensestore_auth:
        - write:licenses
        - read:licenses
    put:
      tags:
      - roles
      summary: Updates license by Id
      parameters:
      - in: path
        name: id
        type: string
        required: true
        description: Id of the license to update
      - in: query
        name: format
        type: string
        enum:
          - xml
          - json
        description: format
      description: ''
      operationId: updateRole
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      responses:
        '405':
          description: Invalid input
      security:
      - licensestore_auth:
        - write:licenses
        - read:licenses
    delete:
      tags:
      - roles
      summary: Deletes a license by Id
      parameters:
      - in: path
        name: id
        type: string
        required: true
        description: Id of the license to delete
      - in: query
        name: format
        type: string
        required: false
        description: format
      description: ''
      operationId: deleteRole
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      responses:
        '405':
          description: Invalid input
      security:
      - licensestore_auth:
        - write:licenses
        - read:licenses
securityDefinitions:
  licensestore_auth:
    type: oauth2
    authorizationUrl: https://licensestore.swagger.io/oauth/authorize
    flow: implicit
    scopes:
      write:licenses: modify licenses in your account
      read:licenses: read your licenses
  interfacestore_auth:
    type: oauth2
    authorizationUrl: https://interfacestore.swagger.io/oauth/authorize
    flow: implicit
    scopes:
      write:interfaces: modify interfaces in your account
      read:interfaces: read your interfaces
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      password:
        type: string
      phone:
        type: string
      userStatus:
        type: integer
        format: int32
        description: User Status
    xml:
      name: User
  License:
    type: object
    required:
    - name
    properties:
      id:
        type: string
      name:
        type: string
      url:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
      path:
        type: string
  Service:
    type: object
    required:
    - name
    properties:
      id:
        type: string
      name:
        type: string
      url:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
      path:
        type: string
  Build:
    type: object
    required:
    - name
    properties:
      id:
        type: string
      name:
        type: string
      url:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
      path:
        type: string
  Exposure:
    type: object
    required:
    - name
    properties:
      id:
        type: string
      name:
        type: string
      url:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
      path:
        type: string
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
externalDocs:
  description: Find out more about Swagger
  url: http://hspc.hspm